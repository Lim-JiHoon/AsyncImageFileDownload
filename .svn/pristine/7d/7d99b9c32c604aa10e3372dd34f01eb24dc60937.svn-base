<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="labelControl1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAABN0RVh0VGl0
        bGUATmV4dDtGb3J3YXJkO6XuICwAAAB0SURBVDhPpczBDcAwDALALJilOlW3c22pVA7wSNTHPULAIyJ+
        seEJG56wYZnXPZP962xYchw40nFPAshyHZAj3JMA3rEc4Z4E0MbLEe5JADT+jnBveXRunKQnAbhx4Z4E
        4MaFexLAzrjYsPD4+MAuG+6L8QBuy8GtSnZO1wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="editorButtonImageOptions1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACt0RVh0VGl0
        bGUAT3BlbjtGb2xkZXI7QmFycztSaWJib247U3RhbmRhcmQ7TG9hZPHDxGMAAALOSURBVDhPpZN7LJVh
        HMff6N5qtfqjrTURf+hGrWQunY5JLkklImm1mjFk6b5aizWSormEQ8nlHKl2ElEicjnIOTg4pFq5nON6
        HA4yjuO835637GyZ9Uc922fPs+f9Pp/n9zzvHgrAf8E0HYLuDPNnembur00rqE+yKRVzbCBO+k1Dgg0q
        oq09SUanLp5NieL3UqI4FiWKZVHCGBZV+2DPLEECG/R01wydmBqToJ7jNBh+2ngdyS2cA6bKeVoBsYJW
        NYMeK4BmJA/0SA6mFG8hjLdH1T1LVN21hCDCAoI7FqgIt0BJ6O5yIligFdREWYOeFINW8kEPPQOt4EEj
        50IzWkTEEkIL+U42mGyEZqIepbfMmJtbrBUwZnqiDvQgWdiXArUsFurOKKjbIzD1PQxTX0KgarsJ1afr
        ULVeQ47/JkawhrCUsIgqCzUHPV6N6e4EdL87i+ZUZzQ9ckZjshMakhzRkOiA+of2EMXZQRizD28umKIg
        2BT5502Qd27bAFV8YxfGpS+hqLkESbonKfMbKbedVEX6ia9E3gbNDwk5khjTwyKoFdVQy8vQL+Qg28dY
        SBVe3oGe6mhIUg+hoziMhAQYrb2KkZqLUAqCoawMwnB5IIY++GHovQ8URWcgLzyFj5G2SPIwDKFeB5mg
        KSsAleEsKD/zMd7G+SMoL/DGQL4XBnKPoT/HDb38w+h97oJXflsRYLXWhOL7bkbJbQcIIp0wKc3FYJEv
        +kiwj38EvS8Ooif7ALqfOkDG2w9Zpi2k6Wy0xlgg1d2ghVzicorrbQS+/3a08AKhrA0jQTvIMkgwjY2u
        Jyx0PbZCZ4olOpLN0cExQ3viTpRd2YL7jusjmd9JcVz1arnHDZF1wghZXkbgkTHP0xBcj43IZHBnMECG
        G+GoPtJc9ZHsskF60nS1MRH8ejNLCCsIK+dg1SyYuWUE3VQXPYpB+yj+DVA/AVjcWk79JZvUAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="FrmMyopiaSetting.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>